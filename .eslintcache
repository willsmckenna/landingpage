[{"C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\index.js":"1","C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\components\\LandingPage.js":"2","C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\components\\Form.js":"3","C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\components\\AppBar.js":"4"},{"size":259,"mtime":1611431808347,"results":"5","hashOfConfig":"6"},{"size":1679,"mtime":1612652560150,"results":"7","hashOfConfig":"6"},{"size":3107,"mtime":1612650917222,"results":"8","hashOfConfig":"6"},{"size":1664,"mtime":1612754211250,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1xlq8e9",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\index.js",[],["21","22"],"C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\components\\LandingPage.js",[],"C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\components\\Form.js",["23"],"import React, {useState} from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Form = () => {\r\n    const [radioValue, setRadioValue] = useState('cases-and-deaths-map');\r\n    const [zipValue, setZipValue] = useState('');\r\n    const [errors, setErrors] = useState('');\r\n\r\n    const handleMapChange = (event) => {\r\n        setRadioValue(event.target.value);\r\n    }\r\n\r\n    const handleZipChange = (event) => {\r\n        setZipValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (radioValue === 'cases-and-deaths-map'){\r\n            if (zipValue !== ''){\r\n                window.location.href = `https://desktop-krh7oek:3344/webappbuilder/apps/5/?find=${zipValue}`;\r\n            }\r\n            else{\r\n                window.location.href = `https://desktop-krh7oek:3344/webappbuilder/apps/5`;\r\n            }\r\n        }\r\n        else if (radioValue === 'vaccine-map'){\r\n            if (zipValue !== ''){\r\n                window.location.href = `https://desktop-krh7oek:3344/webappbuilder/apps/7/?find=${zipValue}`;\r\n            }\r\n            else {\r\n                window.location.href = `https://desktop-krh7oek:3344/webappbuilder/apps/7`;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop:'2em'}}>\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container justify=\"center\">\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\" style={{fontWeight: \"bold\", textAlign: \"center\"}}>Choose Map</FormLabel>\r\n                        <RadioGroup row aria-label=\"map\" name=\"map\" value={radioValue} onChange={handleMapChange}>\r\n                            <FormControlLabel value=\"cases-and-deaths-map\" control={<Radio />} label=\"Cases and Deaths Map\" />\r\n                            <FormControlLabel value=\"vaccine-map\" control={<Radio />} label=\"Vaccine Map\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <br/>\r\n                    <div>\r\n                        <TextField label=\"(optional) enter zipcode\" id=\"standard-basic\" value={zipValue} onChange={handleZipChange}/>\r\n                    </div>\r\n                    {errors && <h4 style={{color: 'red'}}>{errors}</h4>}\r\n                    <Grid container justify=\"center\" style={{marginTop:'1em'}}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{marginTop: '1rem', marginBottom: '1rem'}}>\r\n                            Go To Map\r\n                        </Button>  \r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;",["24","25"],"C:\\Users\\wills\\Desktop\\covid-dashboard\\landingpage\\src\\components\\AppBar.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":14,"column":20,"nodeType":"32","messageId":"33","endLine":14,"endColumn":29},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]